name: Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: Tests microservice
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run:  pip3 install poetry
        
      - name: Create VirtualEnvs
        run: poetry config virtualenvs.create true
        
      - name: Enable VirtualEnvs
        run: poetry config virtualenvs.in-project true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies if cache does not exist
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install -E dev --no-interaction --no-root
        
      - name: Install library
        run: poetry install -E dev --no-interaction

      - name: Run tests
        run: pytest --cov=app/service

      - name: Upload to codecov
        run: bash <(curl -s https://codecov.io/bash)